{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u9E97\\u4F36\\\\.babun\\\\cygwin\\\\home\\\\\\u9E97\\u4F36\\\\coding\\\\js\\\\mernstack course\\\\client\\\\src\\\\components\\\\screens\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    fetch('/allpost', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setData(result.posts);\n    });\n  }, []);\n  /*\n      const likePost = (id)=>{\n          fetch('like',{\n              method:\"put\",\n                      \n          })\n  \n  \n          console.log(\"testtt\")\n      }\n  */\n\n  const likePost = id => {\n    fetch('/like', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      //console.log(result)\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const unlikePost = id => {\n    fetch('/unlike', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId: id\n      })\n    }).then(res => res.json()).then(result => {\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        postId,\n        text\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      const newData = data.map(item => {\n        if (item._id == result._id) {\n          return result;\n        } else {\n          return item;\n        }\n      });\n      setData(newData);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const deletePost = postid => {\n    fetch(`/deletepost/${postid}`, {\n      method: \"delete\",\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card home-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [item.postedBy.name, /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            style: {\n              color: \"red\"\n            },\n            children: \"favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), item.likes.includes(state._id) ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              unlikePost(item._id);\n            },\n            children: \"thumb_down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            onClick: () => {\n              likePost(item._id);\n            },\n            children: \"thumb_up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [item.likes.length, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), item.comments.map(record => {\n            return /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"500\"\n                },\n                children: record.postedBy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 66\n              }, this), record.text]\n            }, record._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 45\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              makeComment(e.target[0].value, item._id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"add a comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"kLS/0ojS7ut9bSkV1n2Vnvv0y/8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/麗伶/.babun/cygwin/home/麗伶/coding/js/mernstack course/client/src/components/screens/Home.js"],"names":["React","useState","useEffect","useContext","UserContext","Home","data","setData","state","dispatch","fetch","headers","localStorage","getItem","then","res","json","result","console","log","posts","likePost","id","method","body","JSON","stringify","postId","newData","map","item","_id","catch","err","unlikePost","makeComment","text","deletePost","postid","postedBy","name","photo","color","likes","includes","length","title","comments","record","fontWeight","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useContext} from 'react'\nimport {UserContext} from '../../App'\n\nconst Home = ()=>{\n    const [data,setData] = useState([])\n    const {state,dispatch} = useContext(UserContext)\n    useEffect(()=>{\n        fetch('/allpost',{\n            headers: {\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            setData(result.posts)  \n        })\n    },[])\n\n/*\n    const likePost = (id)=>{\n        fetch('like',{\n            method:\"put\",\n                    \n        })\n\n\n        console.log(\"testtt\")\n    }\n*/\n\n    const likePost = (id)=>{\n        fetch('/like',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            //console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    const unlikePost = (id)=>{\n        fetch('/unlike',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId:id\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n\n\n    const makeComment = (text,postId)=>{\n        fetch('/comment',{\n            method:\"put\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                postId,\n                text\n            })\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n            const newData = data.map(item=>{\n                if(item._id==result._id){\n                    return result\n                }else{\n                    return item\n                }\n            })\n            setData(newData)\n        }).catch(err=>{\n            console.log(err)\n        })\n    }\n    \n    const deletePost =(postid) =>{\n        fetch(`/deletepost/${postid}` ,{\n            method:\"delete\",\n            headers:{\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result=>{\n            console.log(result)\n        })\n    }\n\n\n\n    return (\n        <div className=\"home\">\n            {\n                data.map(item=>{\n                    return(\n                        <div className=\"card home-card\" key={item._id}>\n                            <h5>{item.postedBy.name}\n                            <i className=\"material-icons\">delete</i></h5>\n                            <div className=\"card-image\">\n                                <img src={item.photo}/>\n                            </div>\n                            <div className=\"card-content\">\n                                <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\n                                {item.likes.includes(state._id)\n\n                                ?\n                                <i className=\"material-icons\"\n                                    onClick={()=>{unlikePost(item._id)}}\n                                >thumb_down</i>\n                                :\n                                \n                                <i className=\"material-icons\"\n                                    onClick={()=>{likePost(item._id)}}\n                                >thumb_up</i>\n                                }\n                                \n\n\n                                <h6>{item.likes.length} likes</h6>\n                                <h6>{item.title}</h6>\n                                <p>{item.body}</p>\n                                {\n                                    item.comments.map(record=>{\n                                        return(\n                                            <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span>{record.text}</h6>\n                                        )\n                                    })\n                                }\n                                <form onSubmit={(e)=>{\n                                    e.preventDefault()\n                                    makeComment(e.target[0].value,item._id)\n                                }}>\n                                    <input type=\"text\" placeholder=\"add a comment\"/>\n                                </form>\n                                \n                            </div>\n                        </div>\n                    )\n                })\n            }    \n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}